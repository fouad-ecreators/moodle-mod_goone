/*
 * This file is part of Totara Learn
 *
 * Copyright (C) 2018 onwards Totara Learning Solutions LTD
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Michael Dunstan <michael.dunstan@androgogic.com>
 * @package totara_contentmarketplace
 */

/**
 *
 * @module     totara_contentmarketplace/explorer
 * @class      explorer
 * @package    totara_contentmarketplace
 */

define(['jquery', 'core/str', 'core/config', 'core/templates', 'core/modal_factory', 'core/modal_events'], function($, Str, mdlcfg, templates, ModalFactory, ModalEvents) {

    var explorer = {};

    explorer.selector = null;
    explorer.haveQueriedOrSortedAtLeastOnce = false;
    explorer.selected = [];
    explorer.totalResults = 0;
    explorer.maxSelectAll = 10000;
    explorer.maxCreateCourse = 100;
    explorer.warnCreateCourse = 11;

    explorer.init = function (selector) {
        var self = this,
            context = $(selector);
        this.selector = selector;
        this.marketplace = context.data('marketplace');
        this.mode = context.data('mode');
        if (this.mode == 'create-course') {
            $('.tcm-collection-tool', this.selector).hide();
        }
        this.category = context.data('category');
        $('.sorting select', context).on('change', this, function(event) {event.preventDefault(); event.data.sort();});
        $('.tc_search_query form', context).on('submit', this, function(event) {event.preventDefault(); event.data.search();});
        context.on('change', '.tc_search_filter input', this, function(event) {event.preventDefault(); event.data.search();});
        $('.load-more button', context).on('click', this, function(event) {event.preventDefault(); event.data.more();});
        context.on('change', '.tcm_thumbnail_selection input', this, function(event) {
            event.preventDefault();
            if ($(event.target).is(':checked')) {
                self.addToSelection($(event.target).val());
            } else {
                self.removeFromSelection($(event.target).val());
            }
        });
        context.on('click', '.tcm_thumbnail_selection label, .tcm_thumbnail_selection input', function(event) {
            // Selecting an item is not the same as showing its details.
            event.stopPropagation();
        });
        context.on('click', '.tc-search-thumbnail', function(event) {
            event.preventDefault();
            var id = $(this).find('input').val();
            self.showDetails(id);
        });
        $('.tc_search_selection_tools', context).on('click', '.tcm-create-course.tcm-tool-enabled', this, function(event) {
            event.preventDefault();
            event.data.createCourse();
        });
        $('.tcm-add-to-collection', context).on('click', this, function(event) {event.preventDefault(); event.data.addToCollection();});
        $('.tcm-remove-from-collection', context).on('click', this, function(event) {event.preventDefault(); event.data.removeFromCollection();});
        $('.tcm-select-all', context).on('click', this, function(event) {event.preventDefault(); event.data.selectAll();});
        $('.tcm-deselect-all', context).on('click', this, function(event) {event.preventDefault(); event.data.deselectAll();});
        this.search();
    };

    explorer.sort = function() {
        this.haveQueriedOrSortedAtLeastOnce = true;
        this.search();
    };

    explorer.search = function() {
        var context = $(this.selector),
            self = this,
            query,
            data;
        context.addClass('tcm-is-searching');
        $('.tc_search_result_summary', context).html("");

        query = $('.tc_search_query input', context).val().trim();

        data = {
            sesskey: mdlcfg.sesskey,
            page: 0,
            query: query,
            sort: $('.sorting select', context).val(),
            multivaluefilters: [],
            singlevaluefilters: [],
            marketplace: this.marketplace,
            mode: this.mode
        };

        if (!this.haveQueriedOrSortedAtLeastOnce && query !== '') {
            this.haveQueriedOrSortedAtLeastOnce = true;
            data['isfirstquerywithdefaultsort'] = true;
        }

        $(".tc_search_filter").each(function() {
            var selection,
                name = $(this).attr("data-filter-name");
            if ($(".totara_form_element_checkboxes_checkbox", this).length > 0) {
                selection = $("input:checked", this).map(function () {
                    return $(this).val();
                }).get();
                data["multivaluefilters"].push(name);
            } else if ($(".totara_form_element_radios_radio", this).length > 0) {
                selection = $("input:checked", this).val();
                data["singlevaluefilters"].push(name);
            }
            data["filter-" + name] = selection;
        });
        this.data = data;
        $.post({
            url: mdlcfg.wwwroot + "/totara/contentmarketplace/ajax/search.php",
            data: data
        }).done(function (data) {
            self.totalResults = data.total;
            templates.render('totara_contentmarketplace/results', data).done(function (html) {
                html = $(html);
                $('.tcm_thumbnail_selection input', html).each(function() {
                    if (self.selected.indexOf($(this).val()) >= 0) {
                        $(this).prop("checked", true);
                    }
                });
                $('.results').replaceWith(html);
                if (data.more) {
                    $('.load-more', context).removeClass('load-more-loading');
                    $('.load-more button', context).prop('disabled', false);
                    $('.load-more', context).show();
                } else {
                    $('.load-more', context).hide();
                }
                self.initResizeHandler();
            });
            templates.render('totara_contentmarketplace/filters', data).done(function (html) {
                $('.tc_search_filters', context).replaceWith(html);
                $('.tcm-checkbox-filter').on('click', '.show-more', function(event) {event.preventDefault(); self.showMoreFilter(event);});
            });
            templates.render('totara_contentmarketplace/result_summary', data).done(function (html) {
                context.removeClass('tcm-is-searching');
                $('.tc_search_result_summary', context).replaceWith(html);
            });
            $('.sorting select', context).val(data.sort);
            if (self.mode !== 'create-course') {
                if (data.selectionmode === 'add') {
                    $('.tcm-add-to-collection', context).show();
                    $('.tcm-remove-from-collection', context).hide();
                } else if (data.selectionmode === 'remove') {
                    $('.tcm-add-to-collection', context).hide();
                    $('.tcm-remove-from-collection', context).show();
                }
            }
        });
    };

    explorer.more = function() {
        var context = $(this.selector),
            self = this,
            data;
        $('.load-more', context).addClass('load-more-loading');
        $('.load-more button', context).prop('disabled', true);
        data = this.data;
        data['page'] += 1;
        $.post({
            url: mdlcfg.wwwroot + "/totara/contentmarketplace/ajax/search.php",
            data: data
        }).done(function (data) {
            templates.render('totara_contentmarketplace/results', data).done(function (html) {
                html = $(html);
                $('.tcm_thumbnail_selection input', html).each(function() {
                    if (self.selected.indexOf($(this).val()) >= 0) {
                        $(this).prop("checked", true);
                    }
                });
                $('> div', html).appendTo('.results');
                if (data.more) {
                    $('.load-more', context).removeClass('load-more-loading');
                    $('.load-more button', context).prop('disabled', false);
                    $('.load-more', context).show();
                } else {
                    $('.load-more', context).hide();
                }
                self.initResizeHandler();
            });
        });
    };

    explorer.addToSelection = function(id) {
        var index = this.selected.indexOf(id);
        if (index < 0) {
            this.selected.push(id);
        }
        this.selection();
    };

    explorer.removeFromSelection = function(id) {
        var index = this.selected.indexOf(id);
        if (index > -1) {
            this.selected.splice(index, 1);
        }
        this.selection();
    };

    explorer.selection = function() {
        var context = $(this.selector);
        if (this.selected.length > 0) {
            var status = $('.tc_search_selection_status', context);
            status.text(this.selected.length + ' ' + status.attr(this.selected.length === 1 ? "data-status-single" : "data-status-multiple"));
            $('.tc_search_selection_tools', context).css('visibility', 'visible');
        } else {
            $('.tc_search_selection_tools', context).css('visibility', 'hidden');
        }
    };

    explorer.selectAll = function() {
        self = this;
        if (self.totalResults > self.maxSelectAll) {
            self.warningTooManySelectAll();
        } else {
            $.post({
                url: mdlcfg.wwwroot + "/totara/contentmarketplace/ajax/select.php",
                data: this.data
            }).done(function (data) {
                $('.tcm-select-all').siblings('.tcm-loading').css({"visibility": "hidden"});
                self.selected = self.selected.concat(data['selection'].filter(function (id) {
                    return self.selected.indexOf(id) < 0;
                }));

                $('.tcm_thumbnail_selection input').each(function() {
                    if (self.selected.indexOf($(this).val()) >= 0) {
                        $(this).prop("checked", true);
                    }
                });
                self.selection();
            });
            $('.tcm-select-all').siblings('.tcm-loading').css({"visibility": "visible"});
        }
    };

    explorer.deselectAll = function() {
        this.selected = [];
        var context = $(this.selector);
        $(".tcm_thumbnail_selection input:checked", context).prop('checked', false);
        this.selection();
    };

    explorer.createCourse = function() {
        if (this.selected.length > this.maxCreateCourse) {
            this.disableCreateCourse();
            this.warningCreateTooManyCourses();
        } else if (this.selected.length >= this.warnCreateCourse) {
            this.disableCreateCourse(this.selected);
            this.warningCreateLotsOfCourses(this.openCreateCourseForm.bind(this, this.selected));
        } else {
            this.openCreateCourseForm(this.selected);
        }
    };

    explorer.openCreateCourseForm = function(selection) {
        var params = {
            category: this.category,
            selection: selection
        };
        this.disableCreateCourse();
        window.location = mdlcfg.wwwroot + "/totara/contentmarketplace/contentmarketplaces/goone/coursecreate.php?" + $.param(params);
    };

    explorer.addToCollection = function() {
        var self = this,
            context = $(self.selector);
        context.addClass('tcm-is-searching');
        $('.tc_search_selection_tools', context).css('visibility', 'hidden');
        $('.tc_search_result_summary', context).html("");
        $.post({
            url: mdlcfg.wwwroot + "/totara/contentmarketplace/ajax/update_collection.php",
            data: {
                sesskey: mdlcfg.sesskey,
                selection: this.selected,
                action: "add",
                marketplace: this.marketplace
            }
        }).done(function (data) {
            self.search();
        });
        self.selected = [];
    };

    explorer.removeFromCollection = function() {
        var self = this,
            context = $(self.selector);
        context.addClass('tcm-is-searching');
        $('.tc_search_selection_tools', context).css('visibility', 'hidden');
        $('.tc_search_result_summary', context).html("");
        $.post({
            url: mdlcfg.wwwroot + "/totara/contentmarketplace/ajax/update_collection.php",
            data: {
                sesskey: mdlcfg.sesskey,
                selection: this.selected,
                action: "remove",
                marketplace: this.marketplace
            }
        }).done(function (data) {
            self.search();
        });
        self.selected = [];
    };

    explorer.showMoreFilter = function(event) {
        var filter, hidden;
        filter = event.delegateTarget;
        hidden = $('.filter_checkboxes-page.hidden', filter);
        hidden.first().removeClass('hidden');
        if (hidden.length === 1) {
            $('.show-more', filter).hide();
        }
    };

    explorer.warningTooManySelectAll = function() {
        // @todo only create once
        var requiredstrings = [
            {key: 'warningtoomanyselectall:title', component: 'totara_contentmarketplace'},
            {key: 'warningtoomanyselectall:body', component: 'totara_contentmarketplace'}
        ];
        var stringsPromise = Str.get_strings(requiredstrings);
        stringsPromise.done(function(strings) {
            ModalFactory.create({
                    type: ModalFactory.types.CANCEL,
                title: $('<div/>').text(strings[0]).html(),
                body: $('<p/>').text(strings[1])[0].outerHTML
                }
            ).done(function(modal) {
                modal.show();
            });
        });
    };

    explorer.warningCreateTooManyCourses = function() {
        var self = this;
        // @todo only create once
        var requiredStrings = [
            {key: 'warningcreatetoomanycourses:title', component: 'totara_contentmarketplace'},
            {key: 'warningcreatetoomanycourses:body', component: 'totara_contentmarketplace'}
        ];
        var stringsPromise = Str.get_strings(requiredStrings);
        stringsPromise.done(function(strings) {
            ModalFactory.create({
                type: ModalFactory.types.CANCEL,
                title: $('<div/>').text(strings[0]).html(),
                body: $('<p/>').text(strings[1])[0].outerHTML
                }
            ).done(function(modal) {
                var root = modal.getRoot();
                root.on(ModalEvents.hidden, self.enableCreateCourse);
                modal.show();
            });
        });
    };

    explorer.warningCreateLotsOfCourses = function(yescallback) {
        var self = this;
        // @todo only create once
        var requiredStrings = [
            {key: 'warningcreatelotsofcourses:title', component: 'totara_contentmarketplace'},
            {key: 'warningcreatelotsofcourses:body', component: 'totara_contentmarketplace', param: this.selected.length},
            {key: 'createcourses', component: 'totara_contentmarketplace', param: this.selected.length},
            {key: 'cancel'}
        ];
        var stringsPromise = Str.get_strings(requiredStrings);
        stringsPromise.done(function(strings) {
            var confirm = ModalFactory.create(
                {
                    type: ModalFactory.types.CONFIRM,
                    title: $('<div/>').text(strings[0]).html(),
                    body: $('<p/>').text(strings[1])[0].outerHTML
                },
                undefined,
                {
                    yesstr: strings[2],
                    nostr: strings[3]
                });
            confirm.done(function(modal) {
                var root = modal.getRoot();
                root.on(ModalEvents.yes, yescallback);
                root.on(ModalEvents.hidden, self.enableCreateCourse);
                modal.show();
            });
        });
    };

    explorer.enableCreateCourse = function() {
        $('.tcm-create-course').addClass('tcm-tool-enabled');
    };

    explorer.disableCreateCourse = function() {
        $('.tcm-create-course').removeClass('tcm-tool-enabled');
    };

    explorer.showDetails = function (id) {
        var self = this;
        self.hideDetails();
        $('.result').removeClass('details-target');
        $('#selection-'+id).closest('.result').addClass('details-target');

        var data = this.data;
        data['id'] = id;

        // We have to keep a copy of the details window container,
        // because it may disappear from DOM later on.
        if (!$('#tcm-details-wrapper-actual').length) {
            $('.details-wrapper').clone().insertAfter('.results').attr('id', 'tcm-details-wrapper-actual');
        }

        var $details = $('#tcm-details-wrapper-actual');

        $('.details-content').remove();
        $details.show();
        $('.preloader').show();
        self.positionDetails();
        if (!self.isElementInViewport($details[0])) {
            var rect = $details[0].getBoundingClientRect();
            window.scrollBy({top: (rect.bottom - window.innerHeight), 'behavior': 'smooth'});
        }

        // Now do the actual work.
        $.post({
            url: mdlcfg.wwwroot + "/totara/contentmarketplace/ajax/fetch_details.php",
            data: data
        }).done(function (data) {
            templates.render('totara_contentmarketplace/details', data).done(function (html) {
                // Only display details if it still matches the selected item.
                if (id === $('.details-target').find('input').val()) {
                    $('.preloader').hide();
                    $('.details-content').remove();
                    $(html).insertAfter('.preloader');
                    $('.tcm-details-close').click(self.hideDetails);
                    $('.create-course-button').click(function(){
                        self.openCreateCourseForm([id]);
                    });
                }
            });
        });
    };

    explorer.positionDetails = function () {
        var $details = $('#tcm-details-wrapper-actual');
        var $target = $('.details-target', this.selector);
        if (!$details.length || !$target.length) {
            return;
        }

        // Place the pointer.
        var left = $target.offset().left + Math.round($target.width() / 2);
        $('.details-pointer').offset({left: left});

        // Place the details window.
        var $last_in_row = $target;
        if (!$target.hasClass('last')) {
            $last_in_row = $target.nextAll('.last:first');
        }
        $details.detach().insertAfter($last_in_row);
    };

    explorer.hideDetails = function () {
        $('#tcm-details-wrapper-actual', this.selector).remove();
        $('.result').removeClass('details-target');
    };

    explorer.initResizeHandler = function () {
        var self = this;
        // We need this one to discover the first and last thumbnail
        // in each row of the floating DIVs, so as to be able to
        // insert the course details window after the last one in a row.
        $(window).on('resize', function() {
            if (!$('.result').length) {
                return;
            }
            var $details = $('#tcm-details-wrapper-actual');
            if ($details.length) {
                $('#tcm-details-wrapper-actual').hide();
            }
            var startPosX = $('.result:first', self.selector).position().left;
            $('.result', self.selector).removeClass("last");
            $('.result').each(function() {
                if ($(this).position().left === startPosX) {
                    var $prev = $(this).prev();
                    if ($prev.hasClass('details-wrapper')) {
                        $prev = $prev.prev();
                    }
                    $prev.addClass("last");
                }
            });
            $('.result:last').addClass("last");
            if ($details.length) {
                $('#tcm-details-wrapper-actual').show();
            }
            self.positionDetails();
        });
        $(window).trigger('resize');
    };

    explorer.isElementInViewport = function (el) {
        var rect = el.getBoundingClientRect();
        return (
            rect.top >= 0 &&
            rect.left >= 0 &&
            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */
            rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */
        );
    };

    return explorer;

});
